# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/v1/apiKeys:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_ListApiKeys
            parameters:
                - name: environmentId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiKeys'
        post:
            tags:
                - Dashboard
            operationId: Dashboard_CreateApiKey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateApiKeyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/apiKeys/{id}:
        delete:
            tags:
                - Dashboard
            operationId: Dashboard_DeleteApiKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/environments:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_ListEnvironments
            parameters:
                - name: projectId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEnvironmentsResponse'
        post:
            tags:
                - Dashboard
            description: Environments
            operationId: Dashboard_CreateEnvironment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEnvironmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Environment'
    /api/v1/environments/{id}:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_GetEnvironment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Environment'
        delete:
            tags:
                - Dashboard
            operationId: Dashboard_DeleteEnvironment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/environments/{id}/clone:
        post:
            tags:
                - Dashboard
            operationId: Dashboard_CloneEnvironment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CloneEnvironmentRequest_Environment'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Environment'
    /api/v1/featureToggles:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_ListFeatureToggles
            parameters:
                - name: environmentId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListFeatureToggleResponse'
        post:
            tags:
                - Dashboard
            description: FeatureToggles
            operationId: Dashboard_CreateFeatureToggle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateFeatureToggleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/featureToggles/{id}:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_GetFeatureToggle
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: environmentIds
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EnvironmentFeatureToggles'
        put:
            tags:
                - Dashboard
            operationId: Dashboard_UpdateFeatureToggle
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateFeatureToggleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - Dashboard
            operationId: Dashboard_DeleteFeatureToggle
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/featureToggles/{id}/history:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_GetFeatureToggleHistoryForEnvironment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: environmentId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FeatureToggleHistory'
    /api/v1/invites/{id}:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_GetProjectInvite
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectInvite'
        patch:
            tags:
                - Dashboard
            operationId: Dashboard_UpdateProjectInvite
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectInvite'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectInvite'
    /api/v1/projects:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_ListProjects
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProjectsResponse'
        post:
            tags:
                - Dashboard
            description: Projects
            operationId: Dashboard_CreateProject
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateProjectRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Project'
    /api/v1/projects/{id}:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_GetProject
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Project'
        delete:
            tags:
                - Dashboard
            operationId: Dashboard_DeleteProject
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/projects/{projectId}/invites:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_ListProjectInvites
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectInvites'
        post:
            tags:
                - Dashboard
            description: Invites
            operationId: Dashboard_CreateProjectInvite
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectInviteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/projects/{projectId}/members:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_ListProjectMembers
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectMembers'
    /api/v1/users/{userId}:
        get:
            tags:
                - Dashboard
            description: Users
            operationId: Dashboard_GetUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
    /api/v1/users/{userId}/invites:
        get:
            tags:
                - Dashboard
            operationId: Dashboard_ListUserInvites
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectInvites'
    /v1/global/hello/{name}:
        get:
            tags:
                - Global
            operationId: Global_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GreetReply'
    /v1/greeter:
        post:
            tags:
                - Greeter
            operationId: Greeter_SayHelloFrom
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HelloRequestFrom'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HelloReply'
    /v1/greeter/{name}:
        get:
            tags:
                - Greeter
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HelloReply'
components:
    schemas:
        ApiKey:
            type: object
            properties:
                id:
                    type: string
                environmentId:
                    type: string
                projectId:
                    type: string
                name:
                    type: string
                key:
                    type: string
                createdAt:
                    type: string
                    format: RFC3339
                expiresAt:
                    type: string
                    format: RFC3339
        ApiKeys:
            type: object
            properties:
                apiKeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/ApiKey'
        BoolOp:
            type: object
            properties:
                value:
                    type: boolean
        CloneEnvironmentRequest_Environment:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
        CreateApiKeyRequest:
            type: object
            properties:
                environmentId:
                    type: string
                name:
                    type: string
                expiresAt:
                    type: string
                    format: RFC3339
        CreateEnvironmentRequest:
            type: object
            properties:
                projectId:
                    type: string
                name:
                    type: string
                description:
                    type: string
        CreateFeatureToggleRequest:
            type: object
            properties:
                projectId:
                    type: string
                feature:
                    $ref: '#/components/schemas/FeatureToggle'
        CreateProjectRequest:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                environments:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateProjectRequest_NewEnvironment'
        CreateProjectRequest_NewEnvironment:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
        DateTimeOp:
            type: object
            properties:
                op:
                    type: integer
                    format: enum
                timestamp:
                    type: string
                    format: RFC3339
        Environment:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                createdAt:
                    type: string
                    format: RFC3339
                projectId:
                    type: string
        EnvironmentFeatureToggle:
            type: object
            properties:
                environmentId:
                    type: string
                featureToggle:
                    $ref: '#/components/schemas/FeatureToggle'
        EnvironmentFeatureToggles:
            type: object
            properties:
                featureToggles:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnvironmentFeatureToggle'
        ExperimentFeature:
            type: object
            properties:
                salt:
                    type: string
                variants:
                    type: array
                    items:
                        $ref: '#/components/schemas/Variant'
        FeatureToggle:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                toggleType:
                    type: integer
                    format: enum
                version:
                    type: integer
                    format: int64
                enabled:
                    type: boolean
                description:
                    type: string
                platforms:
                    type: array
                    items:
                        type: integer
                        format: enum
                createdAt:
                    type: string
                    format: RFC3339
                updatedAt:
                    type: string
                    format: RFC3339
                projectId:
                    type: string
                createdBy:
                    $ref: '#/components/schemas/User'
                updatedBy:
                    $ref: '#/components/schemas/User'
                onOff:
                    $ref: '#/components/schemas/OnOffFeature'
                percentage:
                    $ref: '#/components/schemas/PercentageFeature'
                permission:
                    $ref: '#/components/schemas/PermissionFeature'
                experiment:
                    $ref: '#/components/schemas/ExperimentFeature'
        FeatureToggleHistory:
            type: object
            properties:
                history:
                    type: array
                    items:
                        $ref: '#/components/schemas/FeatureToggle'
        FloatOp:
            type: object
            properties:
                op:
                    type: integer
                    format: enum
                values:
                    type: array
                    items:
                        type: number
                        format: float
        GreetReply:
            type: object
            properties:
                message:
                    type: string
        HelloReply:
            type: object
            properties:
                message:
                    type: string
        HelloRequestFrom:
            type: object
            properties:
                name:
                    type: string
                from:
                    type: string
        Key:
            type: object
            properties:
                key:
                    type: string
                keyType:
                    type: integer
                    format: enum
        ListEnvironmentsResponse:
            type: object
            properties:
                environments:
                    type: array
                    items:
                        $ref: '#/components/schemas/Environment'
        ListFeatureToggleResponse:
            type: object
            properties:
                featureToggles:
                    type: array
                    items:
                        $ref: '#/components/schemas/FeatureToggle'
        ListProjectsResponse:
            type: object
            properties:
                projects:
                    type: array
                    items:
                        $ref: '#/components/schemas/Project'
        Match:
            type: object
            properties:
                key:
                    $ref: '#/components/schemas/Key'
                stringOp:
                    $ref: '#/components/schemas/StringOp'
                boolOp:
                    $ref: '#/components/schemas/BoolOp'
                floatOp:
                    $ref: '#/components/schemas/FloatOp'
                dateTimeOp:
                    $ref: '#/components/schemas/DateTimeOp'
        OnOffFeature:
            type: object
            properties:
                on:
                    $ref: '#/components/schemas/Variant'
                off:
                    $ref: '#/components/schemas/Variant'
        PercentageFeature:
            type: object
            properties:
                salt:
                    type: string
                on:
                    $ref: '#/components/schemas/Variant'
                off:
                    $ref: '#/components/schemas/Variant'
                stickiness:
                    $ref: '#/components/schemas/Stickiness'
        PermissionFeature:
            type: object
            properties:
                salt:
                    type: string
                on:
                    $ref: '#/components/schemas/Variant'
                off:
                    $ref: '#/components/schemas/Variant'
        Project:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                createdAt:
                    type: string
                    format: RFC3339
                environments:
                    type: array
                    items:
                        $ref: '#/components/schemas/Environment'
        ProjectInvite:
            type: object
            properties:
                id:
                    type: string
                projectId:
                    type: string
                projectName:
                    type: string
                createdAt:
                    type: string
                    format: RFC3339
                email:
                    type: string
                expiresAt:
                    type: string
                    format: RFC3339
                status:
                    type: integer
                    format: enum
        ProjectInviteRequest:
            type: object
            properties:
                projectId:
                    type: string
                email:
                    type: string
        ProjectInvites:
            type: object
            properties:
                invites:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectInvite'
        ProjectMember:
            type: object
            properties:
                id:
                    type: string
                projectId:
                    type: string
                role:
                    type: integer
                    format: enum
                user:
                    $ref: '#/components/schemas/User'
                createdAt:
                    type: string
                    format: RFC3339
        ProjectMembers:
            type: object
            properties:
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectMember'
        Stickiness:
            type: object
            properties:
                stickinessType:
                    type: integer
                    format: enum
                keys:
                    type: array
                    items:
                        $ref: '#/components/schemas/Key'
        StringOp:
            type: object
            properties:
                op:
                    type: integer
                    format: enum
                values:
                    type: array
                    items:
                        type: string
        UpdateFeatureToggleRequest:
            type: object
            properties:
                id:
                    type: string
                environmentIds:
                    type: array
                    items:
                        type: string
                feature:
                    $ref: '#/components/schemas/FeatureToggle'
        User:
            type: object
            properties:
                id:
                    type: string
                oryId:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                addresses:
                    type: array
                    items:
                        $ref: '#/components/schemas/User_VerifiableAddress'
                recoveryAddresses:
                    type: array
                    items:
                        $ref: '#/components/schemas/User_VerifiableAddress'
                domain:
                    type: string
                profile:
                    type: string
        User_VerifiableAddress:
            type: object
            properties:
                address:
                    type: string
                verified:
                    type: boolean
        Variant:
            type: object
            properties:
                matches:
                    type: array
                    items:
                        $ref: '#/components/schemas/Match'
                weight:
                    type: number
                    format: float
tags:
    - name: Dashboard
    - name: Global
    - name: Greeter
