version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - REPO_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - ENVOY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/featureguards-envoy:64fc388
      - KRATOS_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/featuguards-kratos:latest
      - cd go
      - docker build -f aws.Dockerfile -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPO_URI
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $IMAGE_REPO_NAME:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPO_URI
      - echo Writing image definitions file...
      - printf '[{"name":"dashboard","imageUri":"%s"}, {"name":"auth","imageUri":"%s"}, {"name":"toggles","imageUri":"%s"}, {"name":"kratos","imageUri":"%s"}, {"name":"kratos-migrate","imageUri":"%s"}, {"name":"envoy","imageUri":"%s"}]' $REPO_URI $REPO_URI $REPO_URI $KRATOS_URI $KRATOS_URI $ENVOY_URI> $CODEBUILD_SRC_DIR/imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
