version: '3'

volumes:
  postgres_data: {}
  postgres_data_backups: {}
  postgres_data_shard_data: {}
  postgres_data_shard_data_backups: {}
  app_code:
  go_code:
  client_go_code:

services:
  postgres:
    image: postgres:14.1
    container_name: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_data_backups:/backups
    env_file:
      - ./.envs/local/postgres
    networks:
      - intranet

  postgres_shard:
    image: postgres:14.1
    container_name: postgres_shard
    volumes:
      - postgres_data_shard_data:/var/lib/postgresql/data
      - postgres_data_shard_data_backups:/backups
    env_file:
      - ./.envs/local/postgres
    networks:
      - intranet

  redis:
    image: redis:6.0
    container_name: redis
    networks:
      - intranet

  app:
    container_name: app
    ports:
      - 3000:3000
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: on-failure
    # command: yarn install --force
    command: yarn dev
    volumes:
      # - ./app:/usr/src/app
      - app_code:/usr/src/app
      # below forks the paths in the container so they don't collide.
      # - /usr/src/app/node_modules
      # - /usr/src/app/.next
      - ./.envs/local/app:/usr/src/app/.env:ro
    networks:
      - intranet

  envoy:
    image: envoyproxy/envoy:v1.21-latest
    container_name: envoy
    depends_on:
      - app
    ports:
      - '80:8080'
      - '8001:8001'
      - '443:8443'
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
      - ./proto/dashboard/dashboard.pb:/protos/dashboard.pb
      - ./certs:/certs
    networks:
      - intranet

  kratos-migrate:
    image: oryd/kratos
    container_name: kratos-migrate
    depends_on:
      - postgres
    env_file:
      - ./.envs/local/kratos
    volumes:
      - type: bind
        source: ./ory/kratos/local
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    networks:
      - intranet

  kratos:
    image: oryd/kratos
    container_name: kratos
    depends_on:
      - kratos-migrate
    env_file:
      - ./.envs/local/kratos
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    # add --dev to make the cookie for http and not https.
    command: serve -c /etc/config/kratos/kratos.yml --watch-courier
    volumes:
      - type: bind
        source: ./ory/kratos/local
        target: /etc/config/kratos
      - type: bind
        source: ./ory/kratos/templates
        target: /templates
    networks:
      - intranet

  kratos-selfservice-ui-node:
    ports:
      - '4455:4455'
    depends_on:
      - kratos
    image: oryd/kratos-selfservice-ui-node
    container_name: kratos-ui
    env_file:
      - ./.envs/local/kratos-ui
    restart: on-failure
    networks:
      - intranet

  mailslurper:
    container_name: mailsurper
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'
    networks:
      - intranet

  dashboard:
    container_name: dashboard
    image: cosmtrek/air
    working_dir: /app
    ports:
      - '50051:50051'
    restart: on-failure
    env_file:
      - ./.envs/local/dashboard
    volumes:
      - go_code:/app
      - client_go_code:/client-go
      - .air/.air.dashboard.toml:/app/.air.toml
    networks:
      - intranet

  # Helper for debugging HTTP traffic.
  # tcpdump:
  #   image: nicolaka/netshoot
  #   depends_on:
  #     - dashboard
  #   command: tcpdump -i eth0 -w /data/dashboard.pcap
  #   network_mode: service:dashboard
  #   volumes:
  #     - /tmp/data:/data

networks:
  intranet:

# Set up Mutagen synchronization and forwarding.
x-mutagen:
  sync:
    defaults:
      ignore:
        vcs: true
    app-code:
      alpha: './app'
      beta: 'volume://app_code'
    go-code:
      alpha: './go'
      beta: 'volume://go_code'
    client-go-code:
      alpha: '../client-go'
      beta: 'volume://client_go_code'
