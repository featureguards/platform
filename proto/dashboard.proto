syntax = "proto3";
package dashboard;
option go_package = "stackv2/go/proto/dashboard";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "feature_toggle.proto";
import "project.proto";
import "user.proto";

service Dashboard {
  // Users
  rpc GetUser(GetUserRequest) returns (user.User) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}"
    };
  }

  // Projects
  rpc CreateProject(CreateProjectRequest) returns (project.Project) {
    option (google.api.http) = {
      post: "/api/v1/projects"
      body: "*"
    };
  }

  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse) {
    option (google.api.http) = {
      get: "/api/v1/projects"
    };
  }

  rpc GetProject(GetProjectRequest) returns (project.Project) {
    option (google.api.http) = {
      get: "/api/v1/projects/{id}"
    };
  }

  rpc DeleteProject(DeleteProjectRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/projects/{id}"
    };
  }

  // Invites
  rpc CreateProjectInvite(ProjectInviteRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/projects/{project_id}/invites"
      body: "*"
    };
  }

  rpc ListProjectInvites(ListProjectInvitesRequest)
      returns (project.ProjectInvites) {
    option (google.api.http) = {
      get: "/api/v1/projects/{project_id}/invites"
    };
  }

  rpc ListUserInvites(ListUserInvitesRequest) returns (project.ProjectInvites) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}/invites"
    };
  }

  rpc ListProjectMembers(ListProjectMembersRequest)
      returns (project.ProjectMembers) {
    option (google.api.http) = {
      get: "/api/v1/projects/{project_id}/members"
    };
  }

  rpc GetProjectInvite(GetProjectInviteRequest)
      returns (project.ProjectInvite) {
    option (google.api.http) = {
      get: "/api/v1/invites/{id}"
    };
  }

  rpc UpdateProjectInvite(UpdateProjectInviteRequest)
      returns (project.ProjectInvite) {
    option (google.api.http) = {
      patch: "/api/v1/invites/{id}"
      body: "invite"
    };
  }

  // Environments
  rpc CreateEnvironment(CreateEnvironmentRequest)
      returns (project.Environment) {
    option (google.api.http) = {
      post: "/api/v1/environments"
      body: "*"
    };
  }

  rpc ListEnvironments(ListEnvironmentsRequest)
      returns (ListEnvironmentsResponse) {
    option (google.api.http) = {
      get: "/api/v1/environments"
    };
  }

  rpc GetEnvironment(GetEnvironmentRequest) returns (project.Environment) {
    option (google.api.http) = {
      get: "/api/v1/environments/{id}"
    };
  }

  rpc CloneEnvironment(CloneEnvironmentRequest) returns (project.Environment) {
    option (google.api.http) = {
      post: "/api/v1/environments/{id}/clone"
      body: "environment"
    };
  }

  rpc CreateApiKey(CreateApiKeyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/apiKeys"
      body: "*"
    };
  }

  rpc ListApiKeys(ListApiKeysRequest) returns (project.ApiKeys) {
    option (google.api.http) = {
      get: "/api/v1/apiKeys"
    };
  }

  rpc DeleteApiKey(DeleteApiKeyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/apiKeys/{id}"
    };
  }

  rpc DeleteEnvironment(DeleteEnvironmentRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/environments/{id}"
    };
  }

  // FeatureToggles
  rpc CreateFeatureToggle(CreateFeatureToggleRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/featureToggles"
      body: "*"
    };
  }

  rpc ListFeatureToggles(ListFeatureToggleRequest)
      returns (ListFeatureToggleResponse) {
    option (google.api.http) = {
      get: "/api/v1/featureToggles"
    };
  }

  rpc GetFeatureToggle(GetFeatureToggleRequest)
      returns (EnvironmentFeatureToggles) {
    option (google.api.http) = {
      get: "/api/v1/featureToggles/{id}"
    };
  }

  rpc GetFeatureToggleHistoryForEnvironment(GetFeatureToggleHistoryRequest)
      returns (feature_toggle.FeatureToggleHistory) {
    option (google.api.http) = {
      get: "/api/v1/featureToggles/{id}/history"
    };
  }

  rpc UpdateFeatureToggle(UpdateFeatureToggleRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/api/v1/featureToggles/{id}"
      body: "*"
    };
  }

  rpc DeleteFeatureToggle(DeleteFeatureToggleRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/featureToggles/{id}"
    };
  }
}

message GetUserRequest {
  string user_id = 1;
}

message CreateProjectRequest {
  message NewEnvironment {
    string name = 1;
    string description = 2;
  }
  string name = 1;
  string description = 2;
  repeated NewEnvironment environments = 3;
}

message ListProjectsRequest {}

message ListProjectsResponse {
  repeated project.Project projects = 1;
}

message GetProjectRequest {
  string id = 1;
}

message DeleteProjectRequest {
  string id = 1;
}

message ListProjectMembersRequest {
  string project_id = 1;
}

message ProjectInviteRequest {
  string project_id = 1;
  string email = 2;
}

message GetProjectInviteRequest {
  string id = 1;
}

message UpdateProjectInviteRequest {
  project.ProjectInvite invite = 1;
}

message ListProjectInvitesRequest {
  string project_id = 1;
}

message ListUserInvitesRequest {
  string user_id = 1;
}

message CreateEnvironmentRequest {
  string project_id = 1;
  string name = 2;
  string description = 3;
}

message ListEnvironmentsRequest {
  string project_id = 1;
}

message ListEnvironmentsResponse {
  repeated project.Environment environments = 1;
}

message GetEnvironmentRequest {
  string id = 1;
}

message CloneEnvironmentRequest {
  message Environment {
    string name = 1;         // Name of the new environment.
    string description = 2;  // Description of the new environment.
  }
  string id = 1;
  Environment environment = 2;
}

message DeleteEnvironmentRequest {
  string id = 1;
}

message ListApiKeysRequest {
  string environment_id = 1;
}

message CreateApiKeyRequest {
  string environment_id = 1;
  string name = 2;
  google.protobuf.Timestamp expires_at = 3;
}

message DeleteApiKeyRequest {
  string id = 1;
}

message CreateFeatureToggleRequest {
  string project_id = 1;
  feature_toggle.FeatureToggle feature = 2;
}

message UpdateFeatureToggleRequest {
  string id = 1;
  repeated string environment_ids = 2;
  feature_toggle.FeatureToggle feature = 3;
}

message ListFeatureToggleRequest {
  string environment_id = 1;
}

message ListFeatureToggleResponse {
  repeated feature_toggle.FeatureToggle feature_toggles = 1;
}

message GetFeatureToggleRequest {
  string id = 1;
  repeated string environment_ids = 2;
}

message GetFeatureToggleHistoryRequest {
  string id = 1;
  string environment_id = 2;
}

message DeleteFeatureToggleRequest {
  string id = 1;
}

message EnvironmentFeatureToggle {
  string environment_id = 1;
  feature_toggle.FeatureToggle feature_toggle = 2;
}

message EnvironmentFeatureToggles {
  repeated EnvironmentFeatureToggle feature_toggles = 1;
}